{"ast":null,"code":"var _jsxFileName = \"E:\\\\incubator\\\\TodoList\\\\GitTodoList\\\\TodoList\\\\src\\\\Todolist.tsx\";\nimport React, { useState } from 'react';\nexport function Todolist(props) {\n  const onAllClickHandler = () => props.changeFilter(\"all\", props.id);\n\n  const onActiveClickHandler = () => props.changeFilter(\"active\", props.id);\n\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.id);\n\n  const onClickRemoveTodoList = () => props.removeTodoList(props.id);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, props.title, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickRemoveTodoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddItemForm, {\n    title: props.title,\n    id: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, props.tasks.map(t => {\n    const onClickHandler = () => props.removeTask(t.id, props.id);\n\n    const onChangeHandler = e => {\n      props.changeTaskStatus(t.id, e.currentTarget.checked, props.id);\n    };\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      className: t.isDone ? \"is-done\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: onChangeHandler,\n      checked: t.isDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, t.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, \"x\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'all' ? \"active-filter\" : \"\",\n    onClick: onAllClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'active' ? \"active-filter\" : \"\",\n    onClick: onActiveClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'completed' ? \"active-filter\" : \"\",\n    onClick: onCompletedClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Completed\")));\n}\nexport const AddItemForm = props => {\n  let [title, setTitle] = useState(\"\");\n  let [error, setError] = useState(null);\n\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  const addTask = () => {\n    if (title.trim() !== \"\") {\n      props.addTask(title.trim(), props.id);\n      setTitle(\"\");\n    } else {\n      setError(\"Title is required\");\n    }\n  };\n\n  const onKeyPressHandler = e => {\n    setError(null);\n\n    if (e.key === \"Enter\") {\n      addTask();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPressHandler,\n    className: error ? \"error\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"+\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }\n  }, error));\n};","map":{"version":3,"sources":["E:/incubator/TodoList/GitTodoList/TodoList/src/Todolist.tsx"],"names":["React","useState","Todolist","props","onAllClickHandler","changeFilter","id","onActiveClickHandler","onCompletedClickHandler","onClickRemoveTodoList","removeTodoList","title","tasks","map","t","onClickHandler","removeTask","onChangeHandler","e","changeTaskStatus","currentTarget","checked","isDone","filter","AddItemForm","setTitle","error","setError","value","addTask","trim","onKeyPressHandler","key"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {FilterValuesType} from './App';\r\n\r\ntype TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todoListId: string) => void\r\n    changeFilter: (value: FilterValuesType, todoListId: string) => void\r\n    addTask: (title: string, todoListId: string) => void\r\n    changeTaskStatus: (taskId: string, isDone: boolean, todoListId: string) => void\r\n    filter: FilterValuesType\r\n    removeTodoList: (todoListID: string) => void\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\", props.id);\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\", props.id);\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.id);\r\n    const onClickRemoveTodoList = () => props.removeTodoList(props.id)\r\n\r\n    return <div>\r\n        <h3>\r\n            {props.title}\r\n            <button onClick={onClickRemoveTodoList}>x</button>\r\n        </h3>\r\n        <div>\r\n            <AddItemForm title={props.title} id={props.id}/>\r\n        </div>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n                    const onClickHandler = () => props.removeTask(t.id, props.id)\r\n                    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        props.changeTaskStatus(t.id, e.currentTarget.checked, props.id);\r\n                    }\r\n\r\n                    return <li key={t.id} className={t.isDone ? \"is-done\" : \"\"}>\r\n                        <input type=\"checkbox\"\r\n                               onChange={onChangeHandler}\r\n                               checked={t.isDone}/>\r\n                        <span>{t.title}</span>\r\n                        <button onClick={onClickHandler}>x</button>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <button className={props.filter === 'all' ? \"active-filter\" : \"\"}\r\n                    onClick={onAllClickHandler}>All\r\n            </button>\r\n            <button className={props.filter === 'active' ? \"active-filter\" : \"\"}\r\n                    onClick={onActiveClickHandler}>Active\r\n            </button>\r\n            <button className={props.filter === 'completed' ? \"active-filter\" : \"\"}\r\n                    onClick={onCompletedClickHandler}>Completed\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype AddItemFormType = {\r\n    addTask:(title: string, todoListId: string)=>void\r\n    id:string\r\n}\r\n\r\nexport const AddItemForm:React.FC<AddItemFormType> = (props) => {\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    const addTask = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addTask(title.trim(), props.id);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError(null);\r\n        if (e.key === \"Enter\") {\r\n            addTask();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   className={error ? \"error\" : \"\"}\r\n            />\r\n            <button onClick={addTask}>+</button>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}