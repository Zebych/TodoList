{"ast":null,"code":"var _jsxFileName = \"E:\\\\incubator\\\\TodoList\\\\GitTodoList\\\\TodoList\\\\src\\\\Todolist.tsx\";\nimport React from 'react';\nimport { AddItemForm } from \"./AddItemForm/AddItemForm\";\nexport function Todolist(props) {\n  const onAllClickHandler = () => props.changeFilter(\"all\", props.id);\n\n  const onActiveClickHandler = () => props.changeFilter(\"active\", props.id);\n\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.id);\n\n  const onClickRemoveTodoList = () => props.removeTodoList(props.id);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, props.title, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickRemoveTodoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddItemForm, {\n    addTask: props.addTask,\n    id: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, props.tasks.map(t => {\n    const onClickHandler = () => props.removeTask(t.id, props.id);\n\n    const onChangeHandler = e => {\n      props.changeTaskStatus(t.id, e.currentTarget.checked, props.id);\n    };\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      className: t.isDone ? \"is-done\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: onChangeHandler,\n      checked: t.isDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, t.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, \"x\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'all' ? \"active-filter\" : \"\",\n    onClick: onAllClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'active' ? \"active-filter\" : \"\",\n    onClick: onActiveClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'completed' ? \"active-filter\" : \"\",\n    onClick: onCompletedClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Completed\")));\n}","map":{"version":3,"sources":["E:/incubator/TodoList/GitTodoList/TodoList/src/Todolist.tsx"],"names":["React","AddItemForm","Todolist","props","onAllClickHandler","changeFilter","id","onActiveClickHandler","onCompletedClickHandler","onClickRemoveTodoList","removeTodoList","title","addTask","tasks","map","t","onClickHandler","removeTask","onChangeHandler","e","changeTaskStatus","currentTarget","checked","isDone","filter"],"mappings":"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","sourcesContent":["import React, {ChangeEvent} from 'react';\r\nimport {FilterValuesType} from './App';\r\nimport {AddItemForm} from \"./AddItemForm/AddItemForm\";\r\n\r\ntype TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todoListId: string) => void\r\n    changeFilter: (value: FilterValuesType, todoListId: string) => void\r\n    addTask: (title: string, todoListId: string) => void\r\n    changeTaskStatus: (taskId: string, isDone: boolean, todoListId: string) => void\r\n    filter: FilterValuesType\r\n    removeTodoList: (todoListID: string) => void\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\", props.id);\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\", props.id);\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.id);\r\n    const onClickRemoveTodoList = () => props.removeTodoList(props.id)\r\n\r\n    return <div>\r\n        <h3>\r\n            {props.title}\r\n            <button onClick={onClickRemoveTodoList}>x</button>\r\n        </h3>\r\n        <div>\r\n            <AddItemForm addTask={props.addTask} id={props.id}/>\r\n        </div>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n                    const onClickHandler = () => props.removeTask(t.id, props.id)\r\n                    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        props.changeTaskStatus(t.id, e.currentTarget.checked, props.id);\r\n                    }\r\n\r\n                    return <li key={t.id} className={t.isDone ? \"is-done\" : \"\"}>\r\n                        <input type=\"checkbox\"\r\n                               onChange={onChangeHandler}\r\n                               checked={t.isDone}/>\r\n                        <span>{t.title}</span>\r\n                        <button onClick={onClickHandler}>x</button>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <button className={props.filter === 'all' ? \"active-filter\" : \"\"}\r\n                    onClick={onAllClickHandler}>All\r\n            </button>\r\n            <button className={props.filter === 'active' ? \"active-filter\" : \"\"}\r\n                    onClick={onActiveClickHandler}>Active\r\n            </button>\r\n            <button className={props.filter === 'completed' ? \"active-filter\" : \"\"}\r\n                    onClick={onCompletedClickHandler}>Completed\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}