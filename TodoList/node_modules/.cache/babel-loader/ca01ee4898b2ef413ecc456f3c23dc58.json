{"ast":null,"code":"var _jsxFileName = \"E:\\\\incubator\\\\TodoList\\\\GitTodoList\\\\TodoList\\\\src\\\\AddItemForm\\\\AddItemForm.tsx\";\nimport React, { useState } from \"react\";\nexport const AddItemForm = props => {\n  let [title, setTitle] = useState(\"\");\n  let [error, setError] = useState(null);\n\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  const addTask = () => {\n    if (title.trim() !== \"\") {\n      props.addTask(title.trim(), props.id);\n      setTitle(\"\");\n    } else {\n      setError(\"Title is required\");\n    }\n  };\n\n  const onKeyPressHandler = e => {\n    setError(null);\n\n    if (e.key === \"Enter\") {\n      addTask();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPressHandler,\n    className: error ? \"error\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"+\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, error));\n};","map":{"version":3,"sources":["E:/incubator/TodoList/GitTodoList/TodoList/src/AddItemForm/AddItemForm.tsx"],"names":["React","useState","AddItemForm","props","title","setTitle","error","setError","onChangeHandler","e","currentTarget","value","addTask","trim","id","onKeyPressHandler","key"],"mappings":";AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA0D,OAA1D;AAMA,OAAO,MAAMC,WAAsC,GAAIC,KAAD,IAAW;AAC7D,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAgB,IAAhB,CAAhC;;AAEA,QAAMO,eAAe,GAAIC,CAAD,IAAsC;AAC1DJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACH,GAFD;;AAGA,QAAMC,OAAO,GAAG,MAAM;AAClB,QAAIR,KAAK,CAACS,IAAN,OAAiB,EAArB,EAAyB;AACrBV,MAAAA,KAAK,CAACS,OAAN,CAAcR,KAAK,CAACS,IAAN,EAAd,EAA4BV,KAAK,CAACW,EAAlC;AACAT,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGO;AACHE,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACH;AACJ,GAPD;;AAQA,QAAMQ,iBAAiB,GAAIN,CAAD,IAAwC;AAC9DF,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAIE,CAAC,CAACO,GAAF,KAAU,OAAd,EAAuB;AACnBJ,MAAAA,OAAO;AACV;AACJ,GALD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAER,KAAd;AACO,IAAA,QAAQ,EAAEI,eADjB;AAEO,IAAA,UAAU,EAAEO,iBAFnB;AAGO,IAAA,SAAS,EAAET,KAAK,GAAG,OAAH,GAAa,EAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAQ,IAAA,OAAO,EAAEM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANJ,EAOKN,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,KAAhC,CAPd,CADJ;AAWH,CAjCM","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\n\r\ntype AddItemFormType = {\r\n    addTask: (title: string, todoListId: string) => void\r\n    id: string\r\n}\r\nexport const AddItemForm: React.FC<AddItemFormType> = (props) => {\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    const addTask = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addTask(title.trim(), props.id);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError(null);\r\n        if (e.key === \"Enter\") {\r\n            addTask();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   className={error ? \"error\" : \"\"}\r\n            />\r\n            <button onClick={addTask}>+</button>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}